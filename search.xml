<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux-boot-theme</title>
      <link href="posts/6406bd98.html"/>
      <url>posts/6406bd98.html</url>
      
        <content type="html"><![CDATA[<p>pc启动的时候搞了个grub2-theme，发现有时候能显示，有时候又不行，决定看看是啥原因。</p><p>解决方法：</p><p>修改/etc/default/grub：</p><ul><li>GRUB_DISABLE_SUBMENU=false</li><li>GRUB_CMDLINE_LINUX 删除 rghb quiet 参数。使用信息全部打印有助于发现系统Bug。</li></ul><p>参考配置</p><pre class="line-numbers language-text" data-language="text"><code class="language-text"># cat /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"GRUB_DEFAULT=savedGRUB_DISABLE_SUBMENU=falseGRUB_CMDLINE_LINUX="rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1 resume=/dev/mapper/os-swap rd.lvm.lv=os/root rd.lvm.lv=os/swap rd.lvm.lv=os/usr rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1"GRUB_DISABLE_RECOVERY="true"GRUB_ENABLE_BLSCFG=falseGRUB_BACKGROUND=/boot/grub2/themes/system/background.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后来我发现fedora33做了优化，菜单只有第1次启动或者上次启动失败的才会显示，类似widnows的体验。相关代码在/etc/grub.d/。<br>也就放弃了挣扎，自定义grub2主题也删除了。。。而且背景图好像也没有正常显示。启动还是会直接登入系统。</p><h2 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h2><p>一般说的是硬盘启动、U盘启动、PXE网络启动、光盘启动、软盘启动。所以区别在启动介质的区别。<br>本地PC一般硬盘/U盘启动，现在笔记本光驱基本上都淘汰了，软盘也淘汰了，PXE一般局域网用来批量装机。</p><h2 id="如何设置启动方式"><a href="#如何设置启动方式" class="headerlink" title="如何设置启动方式"></a>如何设置启动方式</h2><p>开机进BIOS设置启动方式，怎么进BIOS及具体在哪里设置，按自己的品牌网上搜索教程即可。<br>一般ESC（laptop）/DEL（台式/服务器）可以进入BIOS setup。</p><h2 id="引导方式"><a href="#引导方式" class="headerlink" title="引导方式"></a>引导方式</h2><p>或者说叫引导模式。传统的是Legacy引导，现在流行UEFI引导。</p><p>Legacy兼容性好，支持32/64bits系统，但比较老旧，支持MBR格式硬盘引导。</p><ul><li>主分区&lt;=4个</li><li>硬盘&lt;=2TB</li><li>不支持安全启动</li><li>各厂商接口不一致，配置都比较麻烦</li></ul><p>UEFI目前主流模式，性能更好，安全性更好。支持GPT格式硬盘（GUID分区表）引导。</p><ul><li>主分区&lt;=128个</li><li>硬盘&lt;=18*1024TB</li><li>支持安全启动（防止病毒在引导时加载）</li><li>开机没有自检，速度更快</li><li>图形化界面交互性更强</li></ul><p>过渡阶段，支持Legacy+UEFI模式，自动根据硬件选择引导模式。后续主流就是UEFI 64bits系统引导。</p><h2 id="如何设置引导方式"><a href="#如何设置引导方式" class="headerlink" title="如何设置引导方式"></a>如何设置引导方式</h2><p>BIOS设置。这里说明相关几个设置项作用，根据实际需要的引导模式(boot mode)，然后找到对应的设置项进行设置。</p><ul><li>CSM(Compatibility support Module) 兼容模块。 Legacy模式打开，否则关闭。</li><li>Secure Boot Control 安全启动控制设置。 Legacy模式关闭，否则打开。</li><li>Boot Mode 启动模式。切换Legacy或UEFI。</li><li>OS Optimized Defaults 系统默认优化设置。Windows涉及，且Legacy启动时关闭。</li></ul><h2 id="Linux系统启动过程"><a href="#Linux系统启动过程" class="headerlink" title="Linux系统启动过程"></a>Linux系统启动过程</h2><h3 id="Step1-BIOS自检（POST-RunTime）"><a href="#Step1-BIOS自检（POST-RunTime）" class="headerlink" title="Step1 BIOS自检（POST + RunTime）"></a>Step1 BIOS自检（POST + RunTime）</h3><p>检查硬件环境，加载硬件驱动。并将启动引导管理权移交到下一个阶段。</p><p>BIOS，存储于CMOS ROM（只读存储器）内的微型操作系统。基本作用:</p><ul><li>POST 对服务器硬件环境进行基本检查</li><li>RunTime 用户操作系统的启动</li><li>为键盘、视频设备、串口初始化核心设备驱动并分配资源</li><li>选择合适的引导设备（硬盘、U盘、CD-ROM、PXE等）</li><li>将磁盘第1个512Bytes扇区装入内存并传递引导权到该区域</li></ul><p>任何引导盘第1个512字节都包含一个可执行文件，也即引导程序（Legacy =&gt; UEFI）。</p><h3 id="Step2-启动引导管理器引导阶段"><a href="#Step2-启动引导管理器引导阶段" class="headerlink" title="Step2 启动引导管理器引导阶段"></a>Step2 启动引导管理器引导阶段</h3><p>加载系统启动引导管理器，并运行。  </p><p>访问磁盘第1个扇区，称之为主引导记录（MBR），加载启动引导管理程序（GRUB，LiLo等）。  </p><p>也即GRUB（部分）程序在第一个扇区，被加载到内存中执行后，就能看到引导菜单界面。  </p><p>MBR 第1个扇区512Bytes构成：</p><ul><li>前446字节 程序数据</li><li>后64字节  分区表</li><li>后2字节   签名信息</li></ul><h4 id="GRUB基本组成作用"><a href="#GRUB基本组成作用" class="headerlink" title="GRUB基本组成作用"></a>GRUB基本组成作用</h4><ul><li>stage1 装载磁盘0磁道0柱面2扇区到内存中并执行。</li><li>start.S 位于0磁道0柱面2扇区，读取磁盘后续3扇区到N扇区位置到内存（N取决于文件系统支撑代码大小），是stage1.5或者stage2的入口。<br>若加载stage1.5，则通过文件系统跳转到stage2；反之，则通过硬件（INIT 13中断）跳转方式访问stage2。</li><li>stage1.5 使grub能够识别文件系统。支持通过文件系统访问stage2,<br>是stage1与stage2桥梁。</li><li>stage2 提供grub所有功能，包括启动菜单、grub shell交互等。</li></ul><h4 id="GRUB的配置文件"><a href="#GRUB的配置文件" class="headerlink" title="GRUB的配置文件"></a>GRUB的配置文件</h4><ul><li>/boot/grub/grub.conf</li><li>/boot/grub2/grub.cfg</li></ul><p>配置文件作用：</p><ul><li>定义启动分区、内核与镜像文件系统位置</li><li>定义多系统启动引导参数</li></ul><p>当系统正常加载完GRUB后（看到启动菜单或看到GRUB shell后），下一步启动需要依靠GRUB中指定的配置信息。</p><h4 id="GRUB-GRUB2的核心配置信息"><a href="#GRUB-GRUB2的核心配置信息" class="headerlink" title="GRUB/GRUB2的核心配置信息"></a>GRUB/GRUB2的核心配置信息</h4><ol><li>内核与镜像文件系统所在位置，即启动分区（通常是/boot）</li></ol><pre class="line-numbers language-grub" data-language="grub"><code class="language-grub">root (hd0,0) # 第1块硬盘第1个分区<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>内核文件信息：名称（vmlinuz）、位置、根分区位置、根分区挂载方式、其他启动选项</li></ol><pre class="line-numbers language-grub" data-language="grub"><code class="language-grub">kernel /vmlinuz ro root=/dev/mapper/os-root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里只能ro。启动时会自动使用fsck对根文件系统进行检查，前提就是只读。通过后会使用rw重新挂载。</p><ol start="3"><li>镜像文件系统信息：名称和位置（initrd, initramfs 微型操作系统的根，封装在单独的文件中，使系统获取识别文件系统、磁盘、设备的能力）</li></ol><pre class="line-numbers language-grub" data-language="grub"><code class="language-grub">initrd /initramfs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>boot</code>后启动，进入OS。</p><p>具体命令grub/grub2有差别。</p><h4 id="GRUB-Shell"><a href="#GRUB-Shell" class="headerlink" title="GRUB Shell"></a>GRUB Shell</h4><p>能够编辑对应的GRUB的配置信息，进行启动。</p><ul><li><code>c</code> 引导菜单进grub shell。</li><li><code>ctrl x</code> 按当前修改配置启动</li></ul><h4 id="规范操作"><a href="#规范操作" class="headerlink" title="规范操作"></a>规范操作</h4><ol><li>修改/etc/default/grub</li><li>grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg</li></ol><p>无EFI分区，使用 grub2-mkconfig -o /boot/grub2/grub.cfg</p><ol start="3"><li>reboot</li></ol><p>后续内容再单独补充。</p><h3 id="Step3-内核与镜像文件系统加载"><a href="#Step3-内核与镜像文件系统加载" class="headerlink" title="Step3 内核与镜像文件系统加载"></a>Step3 内核与镜像文件系统加载</h3><p>加载基本的设备驱动，识别根等文件系统，并挂载</p><h3 id="Step4-系统初始化及服务加载"><a href="#Step4-系统初始化及服务加载" class="headerlink" title="Step4 系统初始化及服务加载"></a>Step4 系统初始化及服务加载</h3><ul><li>启动1号进程 init</li><li>执行系统初始化</li><li>进入指定的运行级别或模式</li><li>启动相关服务</li><li>开启中端</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> boot </tag>
            
            <tag> grub </tag>
            
            <tag> grub2 </tag>
            
            <tag> theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux网络安全配置</title>
      <link href="posts/2da5073.html"/>
      <url>posts/2da5073.html</url>
      
        <content type="html"><![CDATA[<p>linux服务器或pc在网络稳定可靠运行，无疑是重中之重。本文记录linux安全配置。</p><h2 id="SSH安全登录"><a href="#SSH安全登录" class="headerlink" title="SSH安全登录"></a>SSH安全登录</h2><ol><li>直接关闭root用户ssh登录，使用普通用户登入后切换到root</li></ol><pre class="line-numbers language-text" data-language="text"><code class="language-text">/etc/ssh/sshd_config修改配置: PermitRootLogin no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更进一步 su/sudo 使用也应该正确限制。</p><ol start="2"><li>不关闭root登录，通过ssh-keypair认证，免密登录</li></ol><pre class="line-numbers language-text" data-language="text"><code class="language-text">/root/.ssh/authorized_keys增加一行配置，如： ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDFCDTwzlh8IZuFqudlbtbZRRgmYYLkvO/+0FRXDmY3h6QlqBps1LR5Ydg3GDbt3gpkrzdtdKJNa3VZ+S7+h9+AWu8hpElxxxL5aDE/949T5v2VSUjq2cxxxr82DK8nSdd02MDHsgdxxxhqGmhDhTGmeIfLRI2yEhcdxxxgQu3+GjBischecpJAa7JQjdMmmj+Mq2wMcGPxxx++jlb5Fyrr0kFAIYWN+G+Yp3FdNFbvJjbfwHxxxBBHGWKQ8rP+wiCa8LpXdxwVQAp3w3XWoPEFzJ/FDdIxxxpbU8c42OkdIlAn/obyIkogg+Yv+7qEywaYCmXGGEzOZ2M2Kjs9HhAg0+yxxxGRpONX1nfWsvmgbNMvU4UM47i/dOavGZOpuhRoPvs6pXSyuluGhxxxF0pyyx49BTA+3Bzq0QHlDw0GHMDA0aZe10xxxtTCGD5KHce3sy5uSpZxSyA/xCQqd2vFJxxxrSzJwrmkMaJYC31RrXMxzGzUatsbxFpdFLhAOAM= angus_robot@163.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>生成自己的本地公私钥对后，待登录机器添加的当然是公钥，私钥自己保管好。</p><p>将文件权限修改为root:root 600。</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">chown root:root /root/.ssh/authorized_keyschmod 600 /root/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>同时禁止ssh密码登录</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">/etc/ssh/sshd_config修改配置:PermitRootLogin yesPasswordAuthentication no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>将证书认证改为仅用：/root/.ssh/authorized_keys<br>/etc/ssh/sshd_config<br>修改配置：AuthorizedKeysFile .ssh/authorized_keys</p><ol start="3"><li>对于PC，如果没有必要直接禁止ssh服务</li></ol><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl stop sshdsystemctl disable sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="限制SSH失败重试次数"><a href="#限制SSH失败重试次数" class="headerlink" title="限制SSH失败重试次数"></a>限制SSH失败重试次数</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">/etc/ssh/sshd_config修改配置：MaxAuthTries 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="禁止SSH客户端记住密码"><a href="#禁止SSH客户端记住密码" class="headerlink" title="禁止SSH客户端记住密码"></a>禁止SSH客户端记住密码</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">/etc/ssh/sshd_config修改配置: ChallengeResponseAuthentication yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个配置和免密冲突，使用免密时配置成no。</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/94236787">https://zhuanlan.zhihu.com/p/94236787</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小工具采集器</title>
      <link href="posts/573d126a.html"/>
      <url>posts/573d126a.html</url>
      
        <content type="html"><![CDATA[<h2 id="本地HttpServer"><a href="#本地HttpServer" class="headerlink" title="本地HttpServer"></a>本地HttpServer</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">python3 -m http.serverpython2 -m SimpleHTTPServer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Windows计算文件md5sum"><a href="#Windows计算文件md5sum" class="headerlink" title="Windows计算文件md5sum"></a>Windows计算文件md5sum</h2><pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">certutil -hashfile [filename]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Windows开机启动脚本"><a href="#Windows开机启动脚本" class="headerlink" title="Windows开机启动脚本"></a>Windows开机启动脚本</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Windows\StartMenu\Programs\Startup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="截图软件"><a href="#截图软件" class="headerlink" title="截图软件"></a>截图软件</h2><p><code>flameshot</code> 打开后在后台运行，单击即可截图。功能丰富。</p><p><img src="https://gitee.com/angus_robot/imageBed/raw/master/img/flameshot-test.png"></p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> small-tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小bug清理机</title>
      <link href="posts/e03e6612.html"/>
      <url>posts/e03e6612.html</url>
      
        <content type="html"><![CDATA[<h2 id="sudo-dnf-update-报错：-Zchunk-error-Unable-to-find-multipart-download-range"><a href="#sudo-dnf-update-报错：-Zchunk-error-Unable-to-find-multipart-download-range" class="headerlink" title="sudo dnf update 报错： Zchunk error: Unable to find multipart download range"></a>sudo dnf update 报错： Zchunk error: Unable to find multipart download range</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% sudo dnf update -yFedora 33 - x86_64 - Updates                                                                             15 kB/s |  18 kB     00:01    Fedora 33 - x86_64 - Updates                                                                            291 kB/s | 655 kB     00:02    Errors during downloading metadata for repository 'updates':  - Curl error (52): Server returned nothing (no headers, no data) for http://mirror.sjtu.edu.cn/fedora/linux/updates/33/Everything/x86_64/repodata/91f0b8484161b556ee67d9fa6512cd0f4f2bae6e173aa353e6cc69a782a50b0b-primary.xml.zck [Empty reply from server]  - Curl error (52): Server returned nothing (no headers, no data) for http://mirror.sjtu.edu.cn/fedora/linux/updates/33/Everything/x86_64/repodata/a3f0c8c48033b015034080a03ecbe1797e6a2630f0921499449f6e4367f11a7b-filelists.xml.zck [Empty reply from server]  - Zchunk error: Unable to find multipart download range错误：Failed to download metadata for repo 'updates': Yum repo downloading error: Downloading error: Unable to initialize zchunk file repodata/91f0b8484161b556ee67d9fa6512cd0f4f2bae6e173aa353e6cc69a782a50b0b-primary.xml.zck: Unable to set zchunk file descriptor for repodata/91f0b8484161b556ee67d9fa6512cd0f4f2bae6e173aa353e6cc69a782a50b0b-primary.xml.zck: Unable to find multipart download range<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>处理：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">Temporary solution:1. Set zchunk to False in dnf.conf~]# echo 'zchunk=False' &gt;&gt; /etc/dnf/dnf.conf2. Restart packagekit~]# systemctl restart packagekit.service3. Run again "pkcon refresh force"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="手误删除login-shell如何恢复"><a href="#手误删除login-shell如何恢复" class="headerlink" title="手误删除login shell如何恢复"></a>手误删除login shell如何恢复</h2><p>/etc/passwd 指定为zsh，但zsh被删除后没有chsh，退出后无法登录报permission denied</p><p>处理：</p><p>方案1：修改启动参数</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1. 开机进入grub选单，按e进入编辑    linux /vmlinuz root=/dev/mapper/vg_centos-lv-root ro nomodoset quietcrashkernel=auto rd.lvm.lv=vg_centos/lv_root console=ttyS0,115200n8 LANG=en_US.UTF-8    initrd /initramfs2. 找到linux开头这行 ro quiet console=xxx 并删除3. 这行后加入 rw init=/bin/bash4. 按ctrl+x启动系统5. 启动后进入bash且根目录已经正常挂载，使用passwd修改root密码，chsh修改默认shell6. 执行 exec /sbin/init 进入正常启动流程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方案2：挂载iso启动</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">1. 下载ubuntu iso镜像（可启动iso镜像即可），挂载并从iso启动2. 试用系统，非安装系统，确认进入3. 进入后挂载/etc/passwd对应分区4. 修改配置保存5. 从硬盘重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方案3：Live USB启动</p><p>类似iso启动，进入USB系统操作。</p><h2 id="df-run-user-1000-doc-不允许的操作"><a href="#df-run-user-1000-doc-不允许的操作" class="headerlink" title="df: /run/user/1000/doc: 不允许的操作"></a>df: /run/user/1000/doc: 不允许的操作</h2><p><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1913358#">https://bugzilla.redhat.com/show_bug.cgi?id=1913358#</a></p><h2 id="git-push-出现-Empty-reply-from-server"><a href="#git-push-出现-Empty-reply-from-server" class="headerlink" title="git push 出现 Empty reply from server"></a>git push 出现 Empty reply from server</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% git pushfatal: 无法访问 'https://github.com/arobot123/zilean/'：Empty reply from server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>墙内墙外http,https通道不仅速度慢，也都有失败风险的。访问不到就返回空了。通道换成git</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">vim .git/config将 url 从http/https 替换成git具体链接可以从仓库复制过来，我这里是url = https://github.com/arobot123/zilean=&gt;url = git@github.com:arobot123/zilean.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="grub2-启动中报错：file-EFI-fedora-locale-zh-gmo-not-found"><a href="#grub2-启动中报错：file-EFI-fedora-locale-zh-gmo-not-found" class="headerlink" title="grub2 启动中报错：file /EFI/fedora/locale/zh.gmo not found"></a>grub2 启动中报错：file /EFI/fedora/locale/zh.gmo not found</h2><p>grub2 引导界面还没有出，应该是grub2加载出现问题。但是不影响使用。</p><p>相关代码:</p><pre class="line-numbers language-none"><code class="language-none">if loadfont $font ; then  set gfxmode=auto  load_video  insmod gfxterm  set locale_dir=$prefix/locale  set lang=zh_CN  insmod gettextfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>grub2貌似缺少中文的模块，使用英文en_US试试。确实不报错了。如果一定要使用中文（每次生成都是中文），再看看怎么解决。<br>找到相似的问题单:  <a href="https://bugzilla.redhat.com/show_bug.cgi?id=817187">https://bugzilla.redhat.com/show_bug.cgi?id=817187</a></p><h2 id="系统启动过程中报错：-Loading-of-unsigned-module-is-rejected"><a href="#系统启动过程中报错：-Loading-of-unsigned-module-is-rejected" class="headerlink" title="系统启动过程中报错： Loading of unsigned module is rejected"></a>系统启动过程中报错： Loading of unsigned module is rejected</h2><p>未签名模块加载失败。猜测应该是我的nvida驱动模块加载失败了，开启安全启动了。没有签名的模块会加载失败。<br><code>lsmod | grep -iE nvida</code> 确实没有。还是关闭安全启动，毕竟个人PC，也不会暴露再公网。</p><p>重启验证通过。</p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug-fix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建Qemu虚拟机(二)</title>
      <link href="posts/ae504e32.html"/>
      <url>posts/ae504e32.html</url>
      
        <content type="html"><![CDATA[<p>下面将以ubuntu说明怎么创建一个qemu-kvm，或者一系列qemu-kvm。</p><h2 id="准备素材"><a href="#准备素材" class="headerlink" title="准备素材"></a>准备素材</h2><h3 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h3><p>进入<a href="https://launchpad.net/ubuntu/+cdmirrors">ubuntu官网镜像站</a>，选择自己的镜像站点，<br>比如 China -&gt; HUAWEI Cloud 将会使用华为云镜像站下载，比如 ubuntu20.04.2桌面版iso镜像<br><a href="https://mirrors.huaweicloud.com/repository/ubuntu-releases/20.04.2/ubuntu-20.04.2.0-desktop-amd64.iso">ubuntu-20.04.2.0-desktop-amd64.iso</a>。<br>下载到本地。<br><strong>注意不同镜像站网速可能不一样。</strong></p><p>建议将虚拟机统一目录管理，预留较大的磁盘分区或空间给虚拟机使用。</p><h3 id="虚拟硬盘"><a href="#虚拟硬盘" class="headerlink" title="虚拟硬盘"></a>虚拟硬盘</h3><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">qemu-img create -f qcow2 ubuntu-20.04.2.0.img 100G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里 qcow2 是一种格式的虚拟磁盘，大小限制在100G以内，存储时按实际大小占用空间。</p><h3 id="虚拟机运行脚本"><a href="#虚拟机运行脚本" class="headerlink" title="虚拟机运行脚本"></a>虚拟机运行脚本</h3><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#!/bin/shcmds=(    qemu-kvm    -machine type=pc,accel=kvm,vmport=on,dump-guest-core=on    -smp 4    -boot order=cdn,menu=on,reboot-timeout=5000    -m size=4G    -name ubuntu.20.04.2.0    -uuid 37444335-3031-3636-5a48-483630314435    -hda /var/share/qemu-kvm/ubuntu-20.04.2.0.img    #-cdrom /var/share/qemu-kvm/ubuntu-20.04.2.0-desktop-amd64.iso    -display gtk,show-cursor=on    -vga virtio    -full-screen    -rtc base=localtime    -sdl)"${cmds[@]}"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本可以命名 kvm-ubuntu， 增加执行权限<code>chmod u+x kvm-ubuntu</code>，放到搜索路径下即可在用户全局调用。<br>如 $HOME/bin/kvm-ubuntu，即 $HOME/bin/ 在环境变量PATH中。可以使用<code>printenv PATH</code>查看。</p><p>执行<code>kvm-ubuntu</code>即可启动虚拟机，和真机装机使用基本一致。</p><h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">-boot 指定启动配置，如启动顺序。-cdrom 指定安装镜像-hda 指定虚拟硬盘-sdl 支持快捷键ctrl-c这些<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>完成系统安装后，在行前用<code>#</code>将<code>-cdrom</code>参数注释，或者调整启动顺序。</p><p>qemu默认快捷键:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">ctrl+alt f 全屏切换ctrl+alt g 鼠标捕获<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>详细查看qemu-kvm命令帮助。</p><h2 id="装机重启"><a href="#装机重启" class="headerlink" title="装机重启"></a>装机重启</h2><p>虚拟机启动后，按自己配置，进行系统安装。安装完成后，先关机，然后从硬盘启动，即可进入装机环境。</p><p>这部分内容，可以在网上找到很多相关资源参考。</p><h2 id="套路"><a href="#套路" class="headerlink" title="套路"></a>套路</h2><p>其他的OS，区别仅在于iso不一样，操作都类似。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qemu-kvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建Qemu虚拟机(一)</title>
      <link href="posts/161d550.html"/>
      <url>posts/161d550.html</url>
      
        <content type="html"><![CDATA[<p>使用qemu-kvm模拟器，命令行快速创建部署虚拟机，简单轻量。</p><h2 id="检查系统是否支持"><a href="#检查系统是否支持" class="headerlink" title="检查系统是否支持"></a>检查系统是否支持</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% lscpu | grep -iE 'vmx|svm'Vulnerability Itlb multihit:     KVM: Mitigation: VMX disabledVulnerability L1tf:              Mitigation; PTE Inversion; VMX conditional cache flushes, SMT disabled标记：                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>svm 表示机器是AMD芯片支持AMD-V虚拟化技术；vmx 表示机器是intel芯片支持intel-VT虚拟化技术。<br>开启需要在BIOS中设置。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">% lsmod | grep kvmkvm_intel             327680  0kvm                   950272  1 kvm_intelirqbypass              16384  1 kvm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>系统已经加载虚拟化模块。开启需要执行<code>modprobe kvm &amp;&amp; modprobe kvm_intel</code></p><h2 id="安装qemu-kvm"><a href="#安装qemu-kvm" class="headerlink" title="安装qemu-kvm"></a>安装qemu-kvm</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo dnf install -y qemu* libvirt virt-manager # 缺啥装啥# 测试qemu-kvm可用qemu-kvm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装VNCViewer"><a href="#安装VNCViewer" class="headerlink" title="安装VNCViewer"></a>安装VNCViewer</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">sudo dnf install -y tigervnc tigervnc-server# 测试vncviewer可用vncviewer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="熟悉qemu-kvm命令行"><a href="#熟悉qemu-kvm命令行" class="headerlink" title="熟悉qemu-kvm命令行"></a>熟悉qemu-kvm命令行</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">查看帮助qemu-kvm -h |lessman qemu-kvm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="虚拟机运行基本要素"><a href="#虚拟机运行基本要素" class="headerlink" title="虚拟机运行基本要素"></a>虚拟机运行基本要素</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">- 内存     # 按需分配，我基本上用4G- 磁盘     # 按需分配，我基本上用100G- CPU      # 按机器配置分配，我的是单路4核，一般指定4核，虚拟机和主机也还行- 网络     # 默认nat模式，只要能访问互联网即可- 显示大小 # 支持虚拟机全屏，vga参数virtio- 图形化   # gtk显示- 启动镜像 # 本地iso，安装后可以卸载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h2><p><a href="https://blog.gmem.cc/kvm-qemu-study-note">https://blog.gmem.cc/kvm-qemu-study-note</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qemu-kvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建自己的图床</title>
      <link href="posts/d68a2357.html"/>
      <url>posts/d68a2357.html</url>
      
        <content type="html"><![CDATA[<p>写文时需要用到图床。本文讲述如何搭建自己的私人图床，不用付费，自己维护。</p><h2 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h2><ul><li>gitee</li><li>github</li><li>sm.ms</li><li>阿里云</li></ul><p>gitee/github 都不用付费，国内使用gitee速度更快。<br>sm.ms 有免费额度，不好管理。阿里云收费使用。    </p><p>本文只说明如何在gitee上搭建图床。</p><h2 id="gitee搭建"><a href="#gitee搭建" class="headerlink" title="gitee搭建"></a>gitee搭建</h2><h3 id="1-先注册gitee账号"><a href="#1-先注册gitee账号" class="headerlink" title="1. 先注册gitee账号"></a>1. 先注册gitee账号</h3><p>网站链接： <a href="https://gitee.com/signup">https://gitee.com/signup</a></p><p>已有账号登入即可： <a href="https://gitee.com/login#lang=zh-CN">https://gitee.com/login#lang=zh-CN</a></p><h3 id="2-创建图床仓库"><a href="#2-创建图床仓库" class="headerlink" title="2. 创建图床仓库"></a>2. 创建图床仓库</h3><p>如：仓库名 imageBed, 注意这里要公有仓库。</p><p><img src="https://gitee.com/angus_robot/imageBed/raw/master/img/create-repo-imagebed.png"></p><h3 id="3-生成私人密钥"><a href="#3-生成私人密钥" class="headerlink" title="3. 生成私人密钥"></a>3. 生成私人密钥</h3><p>个人图像 -&gt; 设置 -&gt; 私人令牌 -&gt; 生成新令牌。</p><p>注意要当即复制，不然要重新生成</p><h3 id="4-安装PicGo及Gitee插件"><a href="#4-安装PicGo及Gitee插件" class="headerlink" title="4. 安装PicGo及Gitee插件"></a>4. 安装PicGo及Gitee插件</h3><p>PicGo下载： <a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a><br>我的是 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.3.0-beta.5/PicGo-2.3.0-beta.5.AppImage">PicGo-2.3.0-beta.5.AppImage</a></p><p>Gitee插件： PicGo 下载到本地后运行，在图标上右键可以打开详细设置。</p><p><img src="https://gitee.com/angus_robot/imageBed/raw/master/img/PicGo-plugins-setting.png"></p><p>找到 gitee 上传插件，安装重新打开PicGo即可。</p><h3 id="5-设置Gitee图床参数"><a href="#5-设置Gitee图床参数" class="headerlink" title="5. 设置Gitee图床参数"></a>5. 设置Gitee图床参数</h3><p>参考图设置：</p><p><img src="https://gitee.com/angus_robot/imageBed/raw/master/img/picgo-gitee-setting.png"></p><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h3><p>上传图片，确认上传成功，并获取url。</p>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> image-bed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人工作环境配置</title>
      <link href="posts/6b3a5a22.html"/>
      <url>posts/6b3a5a22.html</url>
      
        <content type="html"><![CDATA[<p>这篇文章仅记录我的个人工作环境配置，读者可以参考。</p><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>单OS环境，其他OS统一使用qemu-kvm+img使用。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">% cat /etc/system-releaseFedora release 33 (Thirty Three)% free              total        used        free      shared  buff/cache   availableMem:           23Gi       2.4Gi        18Gi       911Mi       2.8Gi        19GiSwap:         8.0Gi          0B       8.0Gi% lscpu架构：                           x86_64CPU 运行模式：                   32-bit, 64-bit字节序：                         Little EndianAddress sizes:                   39 bits physical, 48 bits virtualCPU:                             4在线 CPU 列表：                  0-3每个核的线程数：                 1每个座的核数：                   4座：                             1NUMA 节点：                      1厂商 ID：                        GenuineIntelCPU 系列：                       6型号：                           158型号名称：                       Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHz步进：                           9CPU MHz：                        2422.138CPU 最大 MHz：                   3500.0000CPU 最小 MHz：                   800.0000BogoMIPS：                       4999.90虚拟化：                         VT-xL1d 缓存：                       128 KiBL1i 缓存：                       128 KiBL2 缓存：                        1 MiBL3 缓存：                        6 MiBNUMA 节点0 CPU：                 0-3Vulnerability Itlb multihit:     KVM: Mitigation: VMX disabledVulnerability L1tf:              Mitigation; PTE Inversion; VMX conditional cache flushes, SMT disabledVulnerability Mds:               Mitigation; Clear CPU buffers; SMT disabledVulnerability Meltdown:          Mitigation; PTIVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccompVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitizationVulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP disabled, RSB fillingVulnerability Srbds:             Mitigation; MicrocodeVulnerability Tsx async abort:   Not affected标记：                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tmpbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmiflexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% cat /etc/os-releaseNAME=FedoraVERSION="33 (Workstation Edition)"ID=fedoraVERSION_ID=33VERSION_CODENAME=""PLATFORM_ID="platform:f33"PRETTY_NAME="Fedora 33 (Workstation Edition)"ANSI_COLOR="0;38;2;60;110;180"LOGO=fedora-logo-iconCPE_NAME="cpe:/o:fedoraproject:fedora:33"HOME_URL="https://fedoraproject.org/"DOCUMENTATION_URL="https://docs.fedoraproject.org/en-US/fedora/f33/system-administrators-guide/"SUPPORT_URL="https://fedoraproject.org/wiki/Communicating_and_getting_help"BUG_REPORT_URL="https://bugzilla.redhat.com/"REDHAT_BUGZILLA_PRODUCT="Fedora"REDHAT_BUGZILLA_PRODUCT_VERSION=33REDHAT_SUPPORT_PRODUCT="Fedora"REDHAT_SUPPORT_PRODUCT_VERSION=33PRIVACY_POLICY_URL="https://fedoraproject.org/wiki/Legal:PrivacyPolicy"VARIANT="Workstation Edition"VARIANT_ID=workstation<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="处理器"><a href="#处理器" class="headerlink" title="处理器"></a>处理器</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% cat /proc/cpuinfo processor: 0vendor_id: GenuineIntelcpu family: 6model: 158model name: Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHzstepping: 9microcode: 0xdecpu MHz: 2500.000cache size: 6144 KBphysical id: 0siblings: 4core id: 0cpu cores: 4apicid: 0initial apicid: 0fpu: yesfpu_exception: yescpuid level: 22wp: yesflags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1dvmx flags: vnmi preemption_timer invvpid ept_x_only ept_ad ept_1gb flexpriority tsc_offset vtpr mtf vapic ept vpid unrestricted_guest ple pml ept_mode_based_execbugs: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbdsbogomips: 4999.90clflush size: 64cache_alignment: 64address sizes: 39 bits physical, 48 bits virtualpower management:processor: 1vendor_id: GenuineIntelcpu family: 6model: 158model name: Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHzstepping: 9microcode: 0xdecpu MHz: 2399.489cache size: 6144 KBphysical id: 0siblings: 4core id: 1cpu cores: 4apicid: 2initial apicid: 2fpu: yesfpu_exception: yescpuid level: 22wp: yesflags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1dvmx flags: vnmi preemption_timer invvpid ept_x_only ept_ad ept_1gb flexpriority tsc_offset vtpr mtf vapic ept vpid unrestricted_guest ple pml ept_mode_based_execbugs: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbdsbogomips: 4999.90clflush size: 64cache_alignment: 64address sizes: 39 bits physical, 48 bits virtualpower management:processor: 2vendor_id: GenuineIntelcpu family: 6model: 158model name: Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHzstepping: 9microcode: 0xdecpu MHz: 2490.457cache size: 6144 KBphysical id: 0siblings: 4core id: 2cpu cores: 4apicid: 4initial apicid: 4fpu: yesfpu_exception: yescpuid level: 22wp: yesflags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1dvmx flags: vnmi preemption_timer invvpid ept_x_only ept_ad ept_1gb flexpriority tsc_offset vtpr mtf vapic ept vpid unrestricted_guest ple pml ept_mode_based_execbugs: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbdsbogomips: 4999.90clflush size: 64cache_alignment: 64address sizes: 39 bits physical, 48 bits virtualpower management:processor: 3vendor_id: GenuineIntelcpu family: 6model: 158model name: Intel(R) Core(TM) i5-7300HQ CPU @ 2.50GHzstepping: 9microcode: 0xdecpu MHz: 2500.000cache size: 6144 KBphysical id: 0siblings: 4core id: 3cpu cores: 4apicid: 6initial apicid: 6fpu: yesfpu_exception: yescpuid level: 22wp: yesflags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1dvmx flags: vnmi preemption_timer invvpid ept_x_only ept_ad ept_1gb flexpriority tsc_offset vtpr mtf vapic ept vpid unrestricted_guest ple pml ept_mode_based_execbugs: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbdsbogomips: 4999.90clflush size: 64cache_alignment: 64address sizes: 39 bits physical, 48 bits virtualpower management:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><pre class="line-numbers language-none"><code class="language-none">% cat /proc/meminfo MemTotal:       24502556 kBMemFree:        18962040 kBMemAvailable:   20642788 kBBuffers:          167516 kBCached:          2666248 kBSwapCached:            0 kBActive:           684872 kBInactive:        3581016 kBActive(anon):       3380 kBInactive(anon):  2318876 kBActive(file):     681492 kBInactive(file):  1262140 kBUnevictable:      896372 kBMlocked:            4692 kBSwapTotal:       8388604 kBSwapFree:        8388604 kBDirty:               268 kBWriteback:             0 kBAnonPages:       2328476 kBMapped:           731200 kBShmem:            916732 kBKReclaimable:      97160 kBSlab:             190044 kBSReclaimable:      97160 kBSUnreclaim:        92884 kBKernelStack:       13488 kBPageTables:        34764 kBNFS_Unstable:          0 kBBounce:                0 kBWritebackTmp:          0 kBCommitLimit:    20639880 kBCommitted_AS:    7396240 kBVmallocTotal:   34359738367 kBVmallocUsed:       86496 kBVmallocChunk:          0 kBPercpu:             4464 kBHardwareCorrupted:     0 kBAnonHugePages:         0 kBShmemHugePages:        0 kBShmemPmdMapped:        0 kBFileHugePages:         0 kBFilePmdMapped:         0 kBCmaTotal:              0 kBCmaFree:               0 kBHugePages_Total:       0HugePages_Free:        0HugePages_Rsvd:        0HugePages_Surp:        0Hugepagesize:       2048 kBHugetlb:               0 kBDirectMap4k:      345720 kBDirectMap2M:    10022912 kBDirectMap1G:    14680064 kB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">% lsblk NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTloop0         7:0    0  97.9M  1 loop /var/lib/snapd/snap/core/10583loop1         7:1    0   9.1M  1 loop /var/lib/snapd/snap/shadowsocks/64loop2         7:2    0  97.1M  1 loop /var/lib/snapd/snap/core/9993sda           8:0    0 119.2G  0 disk ├─sda1        8:1    0   600M  0 part /boot/efi├─sda2        8:2    0     1G  0 part /boot├─sda3        8:3    0    58G  0 part │ ├─os-swap 253:1    0     8G  0 lvm  [SWAP]│ ├─os-tmp  253:3    0    10G  0 lvm  /tmp│ └─os-var  253:6    0 660.8G  0 lvm  /var└─sda4        8:4    0  59.6G  0 part   └─os-var  253:6    0 660.8G  0 lvm  /varsdb           8:16   0 931.5G  0 disk └─sdb1        8:17   0 931.5G  0 part   ├─os-root 253:0    0    70G  0 lvm  /  ├─os-usr  253:2    0   100G  0 lvm  /usr  ├─os-home 253:4    0   100G  0 lvm  /home  ├─os-opt  253:5    0   100G  0 lvm  /opt  └─os-var  253:6    0 660.8G  0 lvm  /var<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> personal-computer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cannot-open-X-display</title>
      <link href="posts/8ab53597.html"/>
      <url>posts/8ab53597.html</url>
      
        <content type="html"><![CDATA[<p>背景：普通用户下能打开图片，切换到root后报错cannot open X display</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">root # ./background.png No protocol specifiedfeh ERROR: Can't open X display. It *is* running, yeah?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>总感觉不顺，研究下到底是什么原因，看看能不能解决。</p><p>原因： XServer 默认情况下不允许其他用户的图形程序的图形显示在当前屏幕上。<br>如果需要别的用户的图形显示在当前屏幕上，则应以当前登录的用户，即切换前身份的用户执行如下命令: <code>xhost +</code>。<br>示例：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">% xhost +access control disabled, clients can connect from any host<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>实测OK。</p><h2 id="xhost-到底做了什么？"><a href="#xhost-到底做了什么？" class="headerlink" title="xhost 到底做了什么？"></a>xhost 到底做了什么？</h2><p>xhost是用来控制X Server的访问权限的。</p><ul><li>xhost + 是允许所有用户都能访问。</li><li>xhost + ip 是允许指定ip用户能访问。</li></ul><p>参考<a href="https://www.cnblogs.com/CandiceW/p/6106531.html">博客</a>说明。</p><p>以普通用户登入主机，运行root的图形程序，相当于要在普通用户的XServer端，运行root用户的客户端图形程序。<br>因此要先在普通用户服务端开启访问权限。</p><h2 id="时效性"><a href="#时效性" class="headerlink" title="时效性"></a>时效性</h2><p>临时配置，注销或重启后配置失效，和登录会话有关。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> x-display </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令行</title>
      <link href="posts/1c8267d6.html"/>
      <url>posts/1c8267d6.html</url>
      
        <content type="html"><![CDATA[<p>本文参考 <a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html">Linuxtools-rst</a>， 系统学习请移步。供个人使用。</p><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><ul><li>man -k cmd_key_word 仅记得命令部分关键词 cmd_key_word</li><li>whatis command 简要命令说明</li><li>info command 更详细命令说明</li><li>man [1-9] command 最详细命令命令</li><li>which command 查看命令路径</li><li>whereis command 在环境变量PATH中搜索命令位置</li></ul><pre class="line-numbers language-text" data-language="text"><code class="language-text">$ man manman 1 用户级命令man 2 系统级命令man 3 常用函数及数据库man 4 设备文件说明man 5 文件格式规范man 6 游戏man 7 杂项（包括宏包和规范）man 8 系统管理命令man 9 内核相关文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux-tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U盘搭建移动linux工作站</title>
      <link href="posts/5e40c067.html"/>
      <url>posts/5e40c067.html</url>
      
        <content type="html"><![CDATA[<p>Archlinux安装在U盘中，pc/laptop通过U盘启动，进入archlinux实现移动办公，不需要数据同步。本文用于参考移动工作站使能。</p><ol><li>通过虚拟机光驱加载iso启动，进入live环境</li><li>U盘挂载到主机，在虚拟机内部进行读写</li><li>参考官方指导进行系统安装</li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">U盘</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> USB3.0    <span class="token key atrule">size</span><span class="token punctuation">:</span> 256GB<span class="token key atrule">archlinux镜像</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.163.com/archlinux/iso/2021.02.01/archlinux<span class="token punctuation">-</span>2021.02.01<span class="token punctuation">-</span>x86_64.iso<span class="token key atrule">host安装VirtualBox</span><span class="token punctuation">:</span>    <span class="token key atrule">host</span><span class="token punctuation">:</span>        <span class="token key atrule">os</span><span class="token punctuation">:</span> fedora33 x64    <span class="token key atrule">VirtualBox</span><span class="token punctuation">:</span>        <span class="token key atrule">要求</span><span class="token punctuation">:</span> 以root用户或管理员运行        <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//download.virtualbox.org/virtualbox/6.1.18/VirtualBox<span class="token punctuation">-</span>6.1<span class="token punctuation">-</span>6.1.18_142142_fedora32<span class="token punctuation">-</span>1.x86_64.rpm        <span class="token key atrule">extension-url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//download.virtualbox.org/virtualbox/6.1.18/Oracle_VM_VirtualBox_Extension_Pack<span class="token punctuation">-</span>6.1.18.vbox<span class="token punctuation">-</span>extpack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="U盘"><a href="#U盘" class="headerlink" title="U盘"></a>U盘</h3><p>选择USB2.0及以上的接口，空间不小于16GB。</p><h3 id="linux镜像"><a href="#linux镜像" class="headerlink" title="linux镜像"></a>linux镜像</h3><p>debian/ubuntu/archlinux自己选择，仅凭自己能力和兴趣。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -c http://mirrors.163.com/archlinux/iso/2021.02.01/archlinux-2021.02.01-x86_64.iso<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="VirtualBox-Extension安装"><a href="#VirtualBox-Extension安装" class="headerlink" title="VirtualBox + Extension安装"></a>VirtualBox + Extension安装</h3><h4 id="VirtualBox安装"><a href="#VirtualBox安装" class="headerlink" title="VirtualBox安装"></a>VirtualBox安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf <span class="token function">install</span> -y VirtualBox-6.1.18-1.fc33.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -c https://download.virtualbox.org/virtualbox/6.1.18/VirtualBox-6.1-6.1.18_142142_fedora32-1.x86_64.rpm<span class="token function">rpm</span> -ivh VirtualBox-6.1-6.1.18_142142_fedora32-1.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里fedora32版本不影响。</p><h4 id="Extension安装"><a href="#Extension安装" class="headerlink" title="Extension安装"></a>Extension安装</h4><p>文件管理器双击或VirtualBox导入即可安装。</p><h2 id="启动live环境"><a href="#启动live环境" class="headerlink" title="启动live环境"></a>启动live环境</h2><h3 id="创建U盘虚拟盘文件"><a href="#创建U盘虚拟盘文件" class="headerlink" title="创建U盘虚拟盘文件"></a>创建U盘虚拟盘文件</h3><p>插入U盘，系统识别并自动挂载设备</p><pre class="line-numbers language-text" data-language="text"><code class="language-text"># lsblk NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTsdc           8:32   1   231G  0 disk └─sdc1        8:33   1   231G  0 part /run/media/angusrobot/KINGSTON<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>创建U盘虚拟盘文件usb.vmdk到当前路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vboxmanage internalcommands createrawvmdk -filename usb.vmdk -rawdisk /dev/sdc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建并运行虚拟机"><a href="#创建并运行虚拟机" class="headerlink" title="创建并运行虚拟机"></a>创建并运行虚拟机</h3><p>VirtualBox创建虚拟机</p><ol><li>光驱设备加载iso镜像</li><li>硬盘设备指定到usb.vmdk（这里要求VirtualBox要以root权限运行）</li><li>设置启动顺序：光驱-&gt;硬盘</li><li>启动虚拟机</li></ol><h3 id="进入live环境"><a href="#进入live环境" class="headerlink" title="进入live环境"></a>进入live环境</h3><p>启动虚拟机后，选择 Arch Linux install medium 进入安装环境。<br>将以root身份登入zsh。后续参考官网对系统进行定制安装。</p><h2 id="archlinux定制"><a href="#archlinux定制" class="headerlink" title="archlinux定制"></a>archlinux定制</h2><h3 id="确保主机已联网"><a href="#确保主机已联网" class="headerlink" title="确保主机已联网"></a>确保主机已联网</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> <span class="token function">link</span><span class="token function">ping</span> archlinux.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">timedatectl set-ntp <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="硬盘分区并格式化"><a href="#硬盘分区并格式化" class="headerlink" title="硬盘分区并格式化"></a>硬盘分区并格式化</h3><p>可以在主机上执行，也可以在虚拟机中执行。根据提示设置，创建根分区及交换分区。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> /dev/sdc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">p命令回显设备       启动      起点      末尾      扇区  大小 Id 类型/dev/sdc1            2048 467666943 467664896  223G 83 Linux/dev/sdc2       467666944 484519679  16852736    8G 82 Linux swap / Solaris<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkfs.ext4 /dev/sdc1<span class="token function">mkswap</span> /dev/sdc2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/sdc1 /mnt<span class="token function">swapon</span> /dev/sdc2 <span class="token comment"># 后续生成fstab使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="安装基础软件"><a href="#安装基础软件" class="headerlink" title="安装基础软件"></a>安装基础软件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacstrap /mnt base linux linux-firmware<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="生成fstab"><a href="#生成fstab" class="headerlink" title="生成fstab"></a>生成fstab</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">genfstab -U /mnt <span class="token operator">&gt;&gt;</span> /mnt/etc/fstab<span class="token function">cat</span> /etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="切根"><a href="#切根" class="headerlink" title="切根"></a>切根</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arch-chroot /mnt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">locale-gen<span class="token builtin class-name">echo</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8 <span class="token operator">&gt;</span> /etc/locale.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> archlinux <span class="token operator">&gt;</span> /etc/hostname<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/hosts <span class="token operator">&lt;&lt;</span><span class="token string">EOF127.0.0.1   localhost::1         localhost127.0.1.1archlinux.localdomain   archlinuxEOF</span>pacman -S dhclient<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="root-密码"><a href="#root-密码" class="headerlink" title="root 密码"></a>root 密码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建普通用户"><a href="#创建普通用户" class="headerlink" title="创建普通用户"></a>创建普通用户</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m angusrobotpassword angusrobot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>交互输入设置用户密码</p><h3 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">grub-install --target<span class="token operator">=</span>i386-pc /dev/sda<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里注意我没有创建efi分区，并且grub是直接安装在硬盘的，不是sda1/sda2。</p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">exit</span><span class="token function">umount</span> -R /mnt<span class="token function">shutdown</span> -h now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>移除虚拟机光驱，设置硬盘第一启动顺位，启动虚拟机，使用root登入。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">archlinux安装指导</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> archlinux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
